name: tests

on:
  push:
    branches:
    - main
    - develop
  pull_request:
    branches:
    - main
    - develop

jobs:
  tests:
    name: ${{ matrix.session }} ${{ matrix.python-version}} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.12
          - 3.13
        os:
          - ubuntu-latest
          - macos-latest
        session:
          - tests

    env:
      NOXSESSION: ${{ matrix.session }}
      FORCE_COLOR: "1"
      PRE_COMMIT_COLOR: "always"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: abatilo/actions-poetry@v4

      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Define a cache for the virtual environment based on the dependencies lock file
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install the project dependencies
        run: poetry install --with dev

      - name: Run Nox
        run: poetry run nox -r --python=${{ matrix.python-version }} --session=${{ matrix.session }}

      - name: Upload coverage data
        if: ${{ always() }} && ${{ matrix.session }} == 'tests' && ${{ matrix.python-version}} == '3.12'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data
          path: ".coverage.*"

      - name: Upload Codecov coverage results
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true # optional (default = false)
          flags: unittests # optional
          token: ${{ secrets.CODECOV_TOKEN }} # required
          verbose: true # optional (default = false)
          files: ./coverage.xml
          fail_ci: true
